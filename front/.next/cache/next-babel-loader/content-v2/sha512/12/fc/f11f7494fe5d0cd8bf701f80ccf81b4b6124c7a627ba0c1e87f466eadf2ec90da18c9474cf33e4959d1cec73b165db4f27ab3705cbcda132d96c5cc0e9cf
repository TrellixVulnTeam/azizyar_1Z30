{"ast":null,"code":"//import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\nexport default (async (req, res) => {\n  if (req.method === 'POST') {\n    // const res = await fetch(`${API_URL}/time-token`);\n    // const time = await res.json();\n    // res.status(200).json(time);\n    const strapiRes = await fetch(`${API_URL}/time-token`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    const data = await strapiRes.json(); //   if (strapiRes.ok) {\n    //     // Set Cookie\n    //     res.setHeader(\n    //       'Set-Cookie',\n    //       cookie.serialize('token', data.jwt, {\n    //         httpOnly: true,\n    //         secure: process.env.NODE_ENV !== 'development',\n    //         maxAge: 60 * 60 * 24 * 7, // 1 week\n    //         sameSite: 'strict',\n    //         path: '/',\n    //       })\n    //     )\n\n    res.status(200).json(strapiRes);\n  } else {\n    res.setHeader('Allow', ['POST']);\n    res.status(405).json({\n      message: `Method ${req.method} not allowed`\n    });\n  }\n}); // export default async (req, res) => {\n//   if (req.method === 'POST') {\n//     // const res = await fetch(`${API_URL}/time-token`);\n//     // const time = await res.json();\n//     // const now = new Date().getTime();\n//     // const oldtime = +time.time;\n//     // const deference = now - oldtime;\n//     //console.log(deference)\n//     if (deference >= 290000) {\n//       //console.log(deference + ' working!')\n//       //   const qlsRes = await fetch(`${TOKEN_URL}`, {\n//       //     method: 'post',\n//       //     headers: {\n//       //       Authorization:\n//       //         'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n//       //       'Content-Type': 'application/json',\n//       //     },\n//       //   });\n//       //   const data = await qlsRes.json();\n//       //   const values = {\n//       //     token: data.access_token,\n//       //     time: +now,\n//       //   };\n//       //   res.status(200).json(values);\n//       res.status(200).json('working');\n//       //   const ean = req.body.ean\n//       //   fetch(\n//       //     `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\n//       //   )\n//       //     .then((response) => response.json())\n//       //     .then((json) => res.status(200).json(json.products[0].images[4].url))\n//     } else {\n//       //   const values = {\n//       //     token: 'Working',\n//       //     time: +now,\n//       //   };\n//       res.status(200).json('working');\n//     }\n//   } else {\n//     res.setHeader('Allow', ['POST']);\n//     res.status(405).json({ message: `Method ${req.method} not allowed` });\n//   }\n// };","map":{"version":3,"sources":["E:/azizyar/front/pages/api/token.js"],"names":["req","res","method","strapiRes","fetch","API_URL","headers","body","JSON","stringify","data","json","status","setHeader","message"],"mappings":"AAAA;AACA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA;AAEA;AAEA,UAAMC,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAQ,aAAZ,EAA0B;AACrDH,MAAAA,MAAM,EAAE,MAD6C;AAErDI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAL+C,KAA1B,CAA7B;AAQA,UAAMC,IAAI,GAAG,MAAMP,SAAS,CAACQ,IAAV,EAAnB,CAdyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAV,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqBR,SAArB;AACD,GA9BD,MA8BO;AACLF,IAAAA,GAAG,CAACY,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAZ,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEG,MAAAA,OAAO,EAAG,UAASd,GAAG,CAACE,MAAO;AAAhC,KAArB;AACD;AACF,CAnCD,E,CAoCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\r\nexport default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    // const res = await fetch(`${API_URL}/time-token`);\r\n    // const time = await res.json();\r\n\r\n    // res.status(200).json(time);\r\n\r\n    const strapiRes = await fetch(`${API_URL}/time-token`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({}),\r\n    });\r\n\r\n    const data = await strapiRes.json();\r\n\r\n    //   if (strapiRes.ok) {\r\n    //     // Set Cookie\r\n    //     res.setHeader(\r\n    //       'Set-Cookie',\r\n    //       cookie.serialize('token', data.jwt, {\r\n    //         httpOnly: true,\r\n    //         secure: process.env.NODE_ENV !== 'development',\r\n    //         maxAge: 60 * 60 * 24 * 7, // 1 week\r\n    //         sameSite: 'strict',\r\n    //         path: '/',\r\n    //       })\r\n    //     )\r\n\r\n    res.status(200).json(strapiRes);\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).json({ message: `Method ${req.method} not allowed` });\r\n  }\r\n};\r\n// export default async (req, res) => {\r\n//   if (req.method === 'POST') {\r\n//     // const res = await fetch(`${API_URL}/time-token`);\r\n//     // const time = await res.json();\r\n\r\n//     // const now = new Date().getTime();\r\n//     // const oldtime = +time.time;\r\n//     // const deference = now - oldtime;\r\n//     //console.log(deference)\r\n\r\n//     if (deference >= 290000) {\r\n//       //console.log(deference + ' working!')\r\n\r\n//       //   const qlsRes = await fetch(`${TOKEN_URL}`, {\r\n//       //     method: 'post',\r\n//       //     headers: {\r\n//       //       Authorization:\r\n//       //         'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\r\n//       //       'Content-Type': 'application/json',\r\n//       //     },\r\n//       //   });\r\n//       //   const data = await qlsRes.json();\r\n\r\n//       //   const values = {\r\n//       //     token: data.access_token,\r\n//       //     time: +now,\r\n//       //   };\r\n\r\n//       //   res.status(200).json(values);\r\n//       res.status(200).json('working');\r\n//       //   const ean = req.body.ean\r\n\r\n//       //   fetch(\r\n//       //     `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\r\n//       //   )\r\n//       //     .then((response) => response.json())\r\n//       //     .then((json) => res.status(200).json(json.products[0].images[4].url))\r\n//     } else {\r\n//       //   const values = {\r\n//       //     token: 'Working',\r\n//       //     time: +now,\r\n//       //   };\r\n\r\n//       res.status(200).json('working');\r\n//     }\r\n//   } else {\r\n//     res.setHeader('Allow', ['POST']);\r\n//     res.status(405).json({ message: `Method ${req.method} not allowed` });\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}