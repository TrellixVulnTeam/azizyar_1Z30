{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/time.js\";\nimport Layout from '@/components/Layout';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport var __N_SSG = true;\nexport default function HomePage(_ref) {\n  var _this = this;\n\n  var cont = _ref.cont;\n  //console.log(time)\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"token: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cont.map(function (con) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", con.orderId]\n        }, con.orderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/time.js"],"names":["Layout","ToastContainer","HomePage","cont","map","con","orderId"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,cAAT,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;AAEA,eAAe,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACzC;AACA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGA,IAAI,CAACC,GAAL,CAAS,UAACC,GAAD;AAAA,4BACR;AAAA,0BAAwBA,GAAG,CAACC,OAA5B;AAAA,WAASD,GAAG,CAACC,OAAb;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAT;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAZuBJ,Q","sourcesContent":["import Layout from '@/components/Layout'\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport default function HomePage({ cont }) {\n  //console.log(time)\n  return (\n    <Layout>\n      <h1>token: </h1>\n      <ul>\n        {cont.map((con) => (\n          <li key={con.orderId}> {con.orderId}</li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`)\n  const time = await res.json()\n\n  const now = new Date().getTime()\n  const oldtime = +time.time\n  const deference = now - oldtime\n  console.log(deference)\n\n  if (deference >= 290000) {\n    console.log(deference + ' working!')\n\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization:\n          'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json',\n      },\n    })\n    const data = await qlsRes.json()\n\n    const values = {\n      token: data.access_token,\n      time: +now,\n    }\n\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        //  Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(values),\n    })\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong')\n    } else {\n      const evt = await res2.json()\n      toast('Updat Susses!')\n    }\n  }\n\n  const res3 = await fetch(`${API_URL}/time-token`)\n  const newTime = await res3.json()\n\n  const cont = []\n\n  const bolRes = await fetch(`https://api.bol.com/retailer/orders`, {\n    method: 'get',\n\n    headers: {\n      Accept: 'application/vnd.retailer.v5+json',\n      Authorization: 'Bearer ' + newTime.token,\n    },\n  })\n  //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n  const data = await bolRes.json()\n\n  const mmm = data.orders\n\n  //console.log(mmm)\n\n  for (let k in mmm) {\n    // console.log(k)\n\n    const bolDetail = await fetch(\n      `https://api.bol.com/retailer/orders/${mmm[k].orderId}`,\n      {\n        method: 'get',\n\n        headers: {\n          Accept: 'application/vnd.retailer.v5+json',\n          Authorization: 'Bearer ' + newTime.token,\n        },\n      }\n    )\n    //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n    const dat = await bolDetail.json()\n    //console.log(dat)\n    cont.push(dat)\n    //console.log(dat.orderItems)\n  }\n\n  if (bolRes.ok) {\n    //res.status(200).json({ cont, secret })\n\n    console.log(cont)\n  }\n\n  return {\n    props: { cont },\n    revalidate: 1,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}