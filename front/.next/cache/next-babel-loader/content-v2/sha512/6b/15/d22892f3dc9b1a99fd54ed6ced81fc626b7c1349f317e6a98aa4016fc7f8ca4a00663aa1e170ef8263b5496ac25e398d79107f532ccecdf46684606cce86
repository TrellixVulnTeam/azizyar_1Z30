{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"E:/azizyar/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/azizyar/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\azizyar\\\\front\\\\components\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { API_URL } from '@/config/index';\nimport styles from '@/styles/Form.module.css';\nexport default function ImageUpload(_ref) {\n  _s();\n\n  var evtId = _ref.evtId,\n      imageUploaded = _ref.imageUploaded,\n      token = _ref.token;\n\n  var _useState = useState(null),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var formData, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('files', image);\n              formData.append('ref', 'events');\n              formData.append('refId', evtId);\n              formData.append('field', 'image');\n              _context.next = 8;\n              return fetch(\"\".concat(API_URL, \"/upload\"), {\n                method: 'POST',\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                },\n                body: formData\n              });\n\n            case 8:\n              res = _context.sent;\n\n              if (res.ok) {\n                imageUploaded();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleFileChange = function handleFileChange(e) {\n    setImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Event Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.file,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        className: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImageUpload, \"azb7M8tR7S/vp1+UqWJMufJLR5I=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["E:/azizyar/front/components/ImageUpload.js"],"names":["useState","API_URL","styles","ImageUpload","evtId","imageUploaded","token","image","setImage","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","headers","Authorization","body","res","ok","handleFileChange","target","files","form","file"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,SAASC,WAAT,OAAsD;AAAA;;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,aAAwB,QAAxBA,aAAwB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACzCN,QAAQ,CAAC,IAAD,CADiC;AAAA,MAC5DO,KAD4D;AAAA,MACrDC,QADqD;;AAGnE,MAAMC,YAAY;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACMC,cAAAA,QAFa,GAEF,IAAIC,QAAJ,EAFE;AAGnBD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBP,KAAzB;AACAK,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,QAAvB;AACAF,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBV,KAAzB;AACAQ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,OAAzB;AANmB;AAAA,qBAQDC,KAAK,WAAId,OAAJ,cAAsB;AAC3Ce,gBAAAA,MAAM,EAAE,MADmC;AAE3CC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYZ,KAAZ;AADN,iBAFkC;AAK3Ca,gBAAAA,IAAI,EAAEP;AALqC,eAAtB,CARJ;;AAAA;AAQbQ,cAAAA,GARa;;AAgBnB,kBAAIA,GAAG,CAACC,EAAR,EAAY;AACVhB,gBAAAA,aAAa;AACd;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,MAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACZ,CAAD,EAAO;AAC9BF,IAAAA,QAAQ,CAACE,CAAC,CAACa,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB,IAAvB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEhB,YAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEP,MAAM,CAACwB,IAAvB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvCuBnB,W;;KAAAA,W","sourcesContent":["import { useState } from 'react'\r\nimport { API_URL } from '@/config/index'\r\nimport styles from '@/styles/Form.module.css'\r\n\r\nexport default function ImageUpload({ evtId, imageUploaded, token }) {\r\n  const [image, setImage] = useState(null)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('files', image)\r\n    formData.append('ref', 'events')\r\n    formData.append('refId', evtId)\r\n    formData.append('field', 'image')\r\n\r\n    const res = await fetch(`${API_URL}/upload`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: formData,\r\n    })\r\n\r\n    if (res.ok) {\r\n      imageUploaded()\r\n    }\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0])\r\n  }\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1>Upload Event Image</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.file}>\r\n          <input type='file' onChange={handleFileChange} />\r\n        </div>\r\n        <input type='submit' value='Upload' className='btn' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}