{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/time.js\";\nimport Layout from '@/components/Layout';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport var __N_SSG = true;\nexport default function HomePage(_ref) {\n  var newTime = _ref.newTime;\n  //console.log(time)\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"token: \", newTime.time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/time.js"],"names":["Layout","ToastContainer","HomePage","newTime","time"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,cAAT,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;AAEA,eAAe,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC5C;AACA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,4BAAYA,OAAO,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAPuBF,Q","sourcesContent":["import Layout from '@/components/Layout'\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport default function HomePage({ newTime }) {\n  //console.log(time)\n  return (\n    <Layout>\n      <h1>token: {newTime.time}</h1>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`)\n  const time = await res.json()\n\n  const now = new Date().getTime()\n  const oldtime = +time.time\n  const deference = now - oldtime\n  //console.log(now)\n\n  if (deference >= 10000) {\n    console.log(deference + ' working!')\n\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization:\n          'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json',\n      },\n    })\n    const data = await qlsRes.json()\n\n    const values = {\n      token: data.access_token,\n      time: +now,\n    }\n\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        //  Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(values),\n    })\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong')\n    } else {\n      const evt = await res2.json()\n      toast('Updat Susses!')\n    }\n  }\n\n  const res3 = await fetch(`${API_URL}/time-token`)\n  const newTime = await res3.json()\n\n  //console.log(time)\n\n  return {\n    props: { newTime },\n    revalidate: 1,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}