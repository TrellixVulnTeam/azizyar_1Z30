{"ast":null,"code":"import { API_URL } from '@/config/index'; //import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\n\nexport default (async (req, res) => {\n  if (req.method === 'POST') {\n    const res = await fetch(`${API_URL}/time-token`);\n    const time = await res.json();\n    const now = new Date().getTime();\n    const oldtime = +time.time;\n    const deference = now - oldtime; //console.log(deference)\n\n    if (deference >= 290000) {\n      //console.log(deference + ' working!')\n      const qlsRes = await fetch(`${TOKEN_URL}`, {\n        method: 'post',\n        headers: {\n          Authorization: 'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await qlsRes.json();\n      const values = {\n        token: data.access_token,\n        time: +now\n      };\n      const res2 = await fetch(`${API_URL}/time-token`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json' //  Authorization: `Bearer ${token}`,\n\n        },\n        body: JSON.stringify(values)\n      });\n\n      if (!res2.ok) {\n        toast.error('Something Went Wrong');\n      } else {\n        const evt = await res2.json();\n        toast('Updat Susses!');\n      }\n    }\n\n    const res3 = await fetch(`${API_URL}/time-token`);\n    const newTime = await res3.json();\n  } else {\n    res.setHeader('Allow', ['POST']);\n    res.status(405).json({\n      message: `Method ${req.method} not allowed`\n    });\n  }\n});","map":{"version":3,"sources":["E:/azizyar/front/pages/api/token.js"],"names":["API_URL","req","res","method","fetch","time","json","now","Date","getTime","oldtime","deference","qlsRes","TOKEN_URL","headers","Authorization","Buffer","from","CREDENTIALS","toString","data","values","token","access_token","res2","body","JSON","stringify","ok","toast","error","evt","res3","newTime","setHeader","status","message"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB,C,CACA;;AACA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMD,GAAG,GAAG,MAAME,KAAK,CAAE,GAAEJ,OAAQ,aAAZ,CAAvB;AACA,UAAMK,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,UAAMC,OAAO,GAAG,CAACL,IAAI,CAACA,IAAtB;AACA,UAAMM,SAAS,GAAGJ,GAAG,GAAGG,OAAxB,CANyB,CAOzB;;AAEA,QAAIC,SAAS,IAAI,MAAjB,EAAyB;AACvB;AAEA,YAAMC,MAAM,GAAG,MAAMR,KAAK,CAAE,GAAES,SAAU,EAAd,EAAiB;AACzCV,QAAAA,MAAM,EAAE,MADiC;AAEzCW,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX,WAAWC,MAAM,CAACC,IAAP,CAAa,GAAEC,WAAY,EAA3B,EAA8BC,QAA9B,CAAuC,QAAvC,CAFN;AAGP,0BAAgB;AAHT;AAFgC,OAAjB,CAA1B;AAQA,YAAMC,IAAI,GAAG,MAAMR,MAAM,CAACN,IAAP,EAAnB;AAEA,YAAMe,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEF,IAAI,CAACG,YADC;AAEblB,QAAAA,IAAI,EAAE,CAACE;AAFM,OAAf;AAKA,YAAMiB,IAAI,GAAG,MAAMpB,KAAK,CAAE,GAAEJ,OAAQ,aAAZ,EAA0B;AAChDG,QAAAA,MAAM,EAAE,KADwC;AAEhDW,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SAFuC;AAMhDW,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAN0C,OAA1B,CAAxB;;AASA,UAAI,CAACG,IAAI,CAACI,EAAV,EAAc;AACZC,QAAAA,KAAK,CAACC,KAAN,CAAY,sBAAZ;AACD,OAFD,MAEO;AACL,cAAMC,GAAG,GAAG,MAAMP,IAAI,CAAClB,IAAL,EAAlB;AACAuB,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF;;AAED,UAAMG,IAAI,GAAG,MAAM5B,KAAK,CAAE,GAAEJ,OAAQ,aAAZ,CAAxB;AACA,UAAMiC,OAAO,GAAG,MAAMD,IAAI,CAAC1B,IAAL,EAAtB;AACD,GA9CD,MA8CO;AACLJ,IAAAA,GAAG,CAACgC,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAhC,IAAAA,GAAG,CAACiC,MAAJ,CAAW,GAAX,EAAgB7B,IAAhB,CAAqB;AAAE8B,MAAAA,OAAO,EAAG,UAASnC,GAAG,CAACE,MAAO;AAAhC,KAArB;AACD;AACF,CAnDD","sourcesContent":["import { API_URL } from '@/config/index';\r\n//import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\r\nexport default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    const res = await fetch(`${API_URL}/time-token`);\r\n    const time = await res.json();\r\n\r\n    const now = new Date().getTime();\r\n    const oldtime = +time.time;\r\n    const deference = now - oldtime;\r\n    //console.log(deference)\r\n\r\n    if (deference >= 290000) {\r\n      //console.log(deference + ' working!')\r\n\r\n      const qlsRes = await fetch(`${TOKEN_URL}`, {\r\n        method: 'post',\r\n        headers: {\r\n          Authorization:\r\n            'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await qlsRes.json();\r\n\r\n      const values = {\r\n        token: data.access_token,\r\n        time: +now,\r\n      };\r\n\r\n      const res2 = await fetch(`${API_URL}/time-token`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          //  Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(values),\r\n      });\r\n\r\n      if (!res2.ok) {\r\n        toast.error('Something Went Wrong');\r\n      } else {\r\n        const evt = await res2.json();\r\n        toast('Updat Susses!');\r\n      }\r\n    }\r\n\r\n    const res3 = await fetch(`${API_URL}/time-token`);\r\n    const newTime = await res3.json();\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).json({ message: `Method ${req.method} not allowed` });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}