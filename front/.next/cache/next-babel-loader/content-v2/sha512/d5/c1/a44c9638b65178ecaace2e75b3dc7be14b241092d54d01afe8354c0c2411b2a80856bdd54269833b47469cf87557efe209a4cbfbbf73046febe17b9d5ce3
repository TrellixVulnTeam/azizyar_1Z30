{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/time.js\";\nimport Layout from '@/components/Layout';\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default function HomePage({\n  time\n}) {\n  //console.log(time)\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"token: \", time.time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`);\n  const time = await res.json();\n  const now = new Date().getTime();\n  const oldtime = +time.time;\n  const deference = now - oldtime;\n  console.log(now);\n\n  if (deference <= 300000) {\n    console.log(deference + ' working!');\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization: 'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await qlsRes.json();\n    const values = {\n      token: data.access_token,\n      time: +now\n    };\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json' //  Authorization: `Bearer ${token}`,\n\n      },\n      body: JSON.stringify(values)\n    });\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong');\n    } else {\n      const evt = await res2.json();\n      toast('Updat Susses!');\n    }\n  }\n\n  console.log(time);\n  return {\n    props: {\n      time\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/time.js"],"names":["Layout","API_URL","TOKEN_URL","CREDENTIALS","ToastContainer","toast","HomePage","time","getStaticProps","res","fetch","json","now","Date","getTime","oldtime","deference","console","log","qlsRes","method","headers","Authorization","Buffer","from","toString","data","values","token","access_token","res2","body","JSON","stringify","ok","error","evt","props","revalidate"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,QAAgD,gBAAhD;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACzC;AACA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,4BAAYA,IAAI,CAACA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,aAAZ,CAAvB;AACA,QAAMM,IAAI,GAAG,MAAME,GAAG,CAACE,IAAJ,EAAnB;AAEA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAMC,OAAO,GAAG,CAACR,IAAI,CAACA,IAAtB;AACA,QAAMS,SAAS,GAAGJ,GAAG,GAAGG,OAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;;AAEA,MAAII,SAAS,IAAI,MAAjB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,GAAG,WAAxB;AAEA,UAAMG,MAAM,GAAG,MAAMT,KAAK,CAAE,GAAER,SAAU,EAAd,EAAiB;AACzCkB,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EACX,WAAWC,MAAM,CAACC,IAAP,CAAa,GAAErB,WAAY,EAA3B,EAA8BsB,QAA9B,CAAuC,QAAvC,CAFN;AAGP,wBAAgB;AAHT;AAFgC,KAAjB,CAA1B;AAQA,UAAMC,IAAI,GAAG,MAAMP,MAAM,CAACR,IAAP,EAAnB;AAEA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAEF,IAAI,CAACG,YADC;AAEbtB,MAAAA,IAAI,EAAE,CAACK;AAFM,KAAf;AAKA,UAAMkB,IAAI,GAAG,MAAMpB,KAAK,CAAE,GAAET,OAAQ,aAAZ,EAA0B;AAChDmB,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OAFuC;AAMhDU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAN0C,KAA1B,CAAxB;;AASA,QAAI,CAACG,IAAI,CAACI,EAAV,EAAc;AACZ7B,MAAAA,KAAK,CAAC8B,KAAN,CAAY,sBAAZ;AACD,KAFD,MAEO;AACL,YAAMC,GAAG,GAAG,MAAMN,IAAI,CAACnB,IAAL,EAAlB;AACAN,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF;;AAEDY,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,SAAO;AACL8B,IAAAA,KAAK,EAAE;AAAE9B,MAAAA;AAAF,KADF;AAEL+B,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID","sourcesContent":["import Layout from '@/components/Layout'\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport default function HomePage({ time }) {\n  //console.log(time)\n  return (\n    <Layout>\n      <h1>token: {time.time}</h1>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`)\n  const time = await res.json()\n\n  const now = new Date().getTime()\n  const oldtime = +time.time\n  const deference = now - oldtime\n  console.log(now)\n\n  if (deference <= 300000) {\n    console.log(deference + ' working!')\n\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization:\n          'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json',\n      },\n    })\n    const data = await qlsRes.json()\n\n    const values = {\n      token: data.access_token,\n      time: +now,\n    }\n\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        //  Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(values),\n    })\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong')\n    } else {\n      const evt = await res2.json()\n      toast('Updat Susses!')\n    }\n  }\n\n  console.log(time)\n\n  return {\n    props: { time },\n    revalidate: 1,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}