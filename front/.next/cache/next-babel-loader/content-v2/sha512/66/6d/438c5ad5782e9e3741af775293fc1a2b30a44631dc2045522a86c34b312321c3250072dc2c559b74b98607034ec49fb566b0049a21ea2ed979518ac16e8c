{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/time.js\";\nimport Layout from '@/components/Layout';\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Address from 'components/address';\nexport default function HomePage({\n  cont\n}) {\n  //console.log(time)\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), cont.map(con => /*#__PURE__*/_jsxDEV(Address, {\n      address: con\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`);\n  const time = await res.json();\n  const now = new Date().getTime();\n  const oldtime = +time.time;\n  const deference = now - oldtime; //console.log(deference)\n\n  if (deference >= 290000) {\n    //console.log(deference + ' working!')\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization: 'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await qlsRes.json();\n    const values = {\n      token: data.access_token,\n      time: +now\n    };\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json' //  Authorization: `Bearer ${token}`,\n\n      },\n      body: JSON.stringify(values)\n    });\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong');\n    } else {\n      const evt = await res2.json();\n      toast('Updat Susses!');\n    }\n  }\n\n  const res3 = await fetch(`${API_URL}/time-token`);\n  const newTime = await res3.json();\n  const cont = [];\n  const bolRes = await fetch(`https://api.bol.com/retailer/orders`, {\n    method: 'get',\n    headers: {\n      Accept: 'application/vnd.retailer.v5+json',\n      Authorization: 'Bearer ' + newTime.token\n    }\n  }); //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n\n  const data = await bolRes.json();\n  const mmm = data.orders; //console.log(mmm)\n\n  for (let k in mmm) {\n    // console.log(k)\n    const bolDetail = await fetch(`https://api.bol.com/retailer/orders/${mmm[k].orderId}`, {\n      method: 'get',\n      headers: {\n        Accept: 'application/vnd.retailer.v5+json',\n        Authorization: 'Bearer ' + newTime.token\n      }\n    }); //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n\n    const dat = await bolDetail.json(); //console.log(dat)\n\n    cont.push(dat); //console.log(dat.orderItems)\n  }\n\n  if (bolRes.ok) {\n    //res.status(200).json({ cont, secret })\n    //console.log(cont)\n    return {\n      props: {\n        cont\n      },\n      revalidate: 1\n    };\n  }\n}","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/time.js"],"names":["Layout","API_URL","TOKEN_URL","CREDENTIALS","ToastContainer","toast","Address","HomePage","cont","map","con","getStaticProps","res","fetch","time","json","now","Date","getTime","oldtime","deference","qlsRes","method","headers","Authorization","Buffer","from","toString","data","values","token","access_token","res2","body","JSON","stringify","ok","error","evt","res3","newTime","bolRes","Accept","mmm","orders","k","bolDetail","orderId","dat","push","props","revalidate"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,QAAgD,gBAAhD;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACzC;AACA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGA,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACR,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,aAAZ,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,QAAMC,OAAO,GAAG,CAACL,IAAI,CAACA,IAAtB;AACA,QAAMM,SAAS,GAAGJ,GAAG,GAAGG,OAAxB,CANqC,CAOrC;;AAEA,MAAIC,SAAS,IAAI,MAAjB,EAAyB;AACvB;AAEA,UAAMC,MAAM,GAAG,MAAMR,KAAK,CAAE,GAAEX,SAAU,EAAd,EAAiB;AACzCoB,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EACX,WAAWC,MAAM,CAACC,IAAP,CAAa,GAAEvB,WAAY,EAA3B,EAA8BwB,QAA9B,CAAuC,QAAvC,CAFN;AAGP,wBAAgB;AAHT;AAFgC,KAAjB,CAA1B;AAQA,UAAMC,IAAI,GAAG,MAAMP,MAAM,CAACN,IAAP,EAAnB;AAEA,UAAMc,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAEF,IAAI,CAACG,YADC;AAEbjB,MAAAA,IAAI,EAAE,CAACE;AAFM,KAAf;AAKA,UAAMgB,IAAI,GAAG,MAAMnB,KAAK,CAAE,GAAEZ,OAAQ,aAAZ,EAA0B;AAChDqB,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OAFuC;AAMhDU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAN0C,KAA1B,CAAxB;;AASA,QAAI,CAACG,IAAI,CAACI,EAAV,EAAc;AACZ/B,MAAAA,KAAK,CAACgC,KAAN,CAAY,sBAAZ;AACD,KAFD,MAEO;AACL,YAAMC,GAAG,GAAG,MAAMN,IAAI,CAACjB,IAAL,EAAlB;AACAV,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF;;AAED,QAAMkC,IAAI,GAAG,MAAM1B,KAAK,CAAE,GAAEZ,OAAQ,aAAZ,CAAxB;AACA,QAAMuC,OAAO,GAAG,MAAMD,IAAI,CAACxB,IAAL,EAAtB;AAEA,QAAMP,IAAI,GAAG,EAAb;AAEA,QAAMiC,MAAM,GAAG,MAAM5B,KAAK,CAAE,qCAAF,EAAwC;AAChES,IAAAA,MAAM,EAAE,KADwD;AAGhEC,IAAAA,OAAO,EAAE;AACPmB,MAAAA,MAAM,EAAE,kCADD;AAEPlB,MAAAA,aAAa,EAAE,YAAYgB,OAAO,CAACV;AAF5B;AAHuD,GAAxC,CAA1B,CAjDqC,CAyDrC;;AACA,QAAMF,IAAI,GAAG,MAAMa,MAAM,CAAC1B,IAAP,EAAnB;AAEA,QAAM4B,GAAG,GAAGf,IAAI,CAACgB,MAAjB,CA5DqC,CA8DrC;;AAEA,OAAK,IAAIC,CAAT,IAAcF,GAAd,EAAmB;AACjB;AAEA,UAAMG,SAAS,GAAG,MAAMjC,KAAK,CAC1B,uCAAsC8B,GAAG,CAACE,CAAD,CAAH,CAAOE,OAAQ,EAD3B,EAE3B;AACEzB,MAAAA,MAAM,EAAE,KADV;AAGEC,MAAAA,OAAO,EAAE;AACPmB,QAAAA,MAAM,EAAE,kCADD;AAEPlB,QAAAA,aAAa,EAAE,YAAYgB,OAAO,CAACV;AAF5B;AAHX,KAF2B,CAA7B,CAHiB,CAcjB;;AACA,UAAMkB,GAAG,GAAG,MAAMF,SAAS,CAAC/B,IAAV,EAAlB,CAfiB,CAgBjB;;AACAP,IAAAA,IAAI,CAACyC,IAAL,CAAUD,GAAV,EAjBiB,CAkBjB;AACD;;AAED,MAAIP,MAAM,CAACL,EAAX,EAAe;AACb;AACA;AAEA,WAAO;AACLc,MAAAA,KAAK,EAAE;AAAE1C,QAAAA;AAAF,OADF;AAEL2C,MAAAA,UAAU,EAAE;AAFP,KAAP;AAID;AACF","sourcesContent":["import Layout from '@/components/Layout'\nimport { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Address from 'components/address'\n\nexport default function HomePage({ cont }) {\n  //console.log(time)\n  return (\n    <Layout>\n      <h1>Orders: </h1>\n      <ToastContainer />\n\n      {cont.map((con) => (\n        <Address address={con} />\n      ))}\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const res = await fetch(`${API_URL}/time-token`)\n  const time = await res.json()\n\n  const now = new Date().getTime()\n  const oldtime = +time.time\n  const deference = now - oldtime\n  //console.log(deference)\n\n  if (deference >= 290000) {\n    //console.log(deference + ' working!')\n\n    const qlsRes = await fetch(`${TOKEN_URL}`, {\n      method: 'post',\n      headers: {\n        Authorization:\n          'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n        'Content-Type': 'application/json',\n      },\n    })\n    const data = await qlsRes.json()\n\n    const values = {\n      token: data.access_token,\n      time: +now,\n    }\n\n    const res2 = await fetch(`${API_URL}/time-token`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        //  Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(values),\n    })\n\n    if (!res2.ok) {\n      toast.error('Something Went Wrong')\n    } else {\n      const evt = await res2.json()\n      toast('Updat Susses!')\n    }\n  }\n\n  const res3 = await fetch(`${API_URL}/time-token`)\n  const newTime = await res3.json()\n\n  const cont = []\n\n  const bolRes = await fetch(`https://api.bol.com/retailer/orders`, {\n    method: 'get',\n\n    headers: {\n      Accept: 'application/vnd.retailer.v5+json',\n      Authorization: 'Bearer ' + newTime.token,\n    },\n  })\n  //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n  const data = await bolRes.json()\n\n  const mmm = data.orders\n\n  //console.log(mmm)\n\n  for (let k in mmm) {\n    // console.log(k)\n\n    const bolDetail = await fetch(\n      `https://api.bol.com/retailer/orders/${mmm[k].orderId}`,\n      {\n        method: 'get',\n\n        headers: {\n          Accept: 'application/vnd.retailer.v5+json',\n          Authorization: 'Bearer ' + newTime.token,\n        },\n      }\n    )\n    //const cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2')\n    const dat = await bolDetail.json()\n    //console.log(dat)\n    cont.push(dat)\n    //console.log(dat.orderItems)\n  }\n\n  if (bolRes.ok) {\n    //res.status(200).json({ cont, secret })\n    //console.log(cont)\n\n    return {\n      props: { cont },\n      revalidate: 1,\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}