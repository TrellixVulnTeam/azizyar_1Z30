{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\azizyar\\\\front\\\\context\\\\AuthContext.js\";\nimport { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { NEXT_URL } from '@/config/index';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const router = useRouter();\n  useEffect(() => checkUserLoggedIn(), []); // Register user\n\n  const register = async user => {\n    const res = await fetch(`${NEXT_URL}/api/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    const data = await res.json();\n\n    if (res.ok) {\n      setUser(data.user);\n      router.push('/account/dashboard');\n    } else {\n      setError(data.message);\n      setError(null);\n    }\n  }; // Login user\n\n\n  const login = async ({\n    email: identifier,\n    password\n  }) => {\n    const res = await fetch(`${NEXT_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        identifier,\n        password\n      })\n    });\n    const data = await res.json();\n\n    if (res.ok) {\n      setUser(data.user);\n      router.push('/account/dashboard');\n    } else {\n      setError(data.message);\n      setError(null);\n    }\n  }; // Logout user\n\n\n  const logout = async () => {\n    const res = await fetch(`${NEXT_URL}/api/logout`, {\n      method: 'POST'\n    });\n\n    if (res.ok) {\n      setUser(null);\n      router.push('/');\n    }\n  }; // Check if user is logged in\n\n\n  const checkUserLoggedIn = async user => {\n    const res = await fetch(`${NEXT_URL}/api/user`);\n    const data = await res.json();\n\n    if (res.ok) {\n      setUser(data.user);\n    } else {\n      setUser(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      error,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\nexport default AuthContext;","map":{"version":3,"sources":["E:/azizyar/front/context/AuthContext.js"],"names":["createContext","useState","useEffect","useRouter","NEXT_URL","AuthContext","AuthProvider","children","user","setUser","error","setError","router","checkUserLoggedIn","register","res","fetch","method","headers","body","JSON","stringify","data","json","ok","push","message","login","email","identifier","password","logout"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { NEXT_URL } from '@/config/index'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const router = useRouter()\r\n\r\n  useEffect(() => checkUserLoggedIn(), [])\r\n\r\n  // Register user\r\n  const register = async (user) => {\r\n    const res = await fetch(`${NEXT_URL}/api/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    if (res.ok) {\r\n      setUser(data.user)\r\n      router.push('/account/dashboard')\r\n    } else {\r\n      setError(data.message)\r\n      setError(null)\r\n    }\r\n  }\r\n\r\n  // Login user\r\n  const login = async ({ email: identifier, password }) => {\r\n    const res = await fetch(`${NEXT_URL}/api/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        identifier,\r\n        password,\r\n      }),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    if (res.ok) {\r\n      setUser(data.user)\r\n      router.push('/account/dashboard')\r\n    } else {\r\n      setError(data.message)\r\n      setError(null)\r\n    }\r\n  }\r\n\r\n  // Logout user\r\n  const logout = async () => {\r\n    const res = await fetch(`${NEXT_URL}/api/logout`, {\r\n      method: 'POST',\r\n    })\r\n\r\n    if (res.ok) {\r\n      setUser(null)\r\n      router.push('/')\r\n    }\r\n  }\r\n\r\n  // Check if user is logged in\r\n  const checkUserLoggedIn = async (user) => {\r\n    const res = await fetch(`${NEXT_URL}/api/user`)\r\n    const data = await res.json()\r\n\r\n    if (res.ok) {\r\n      setUser(data.user)\r\n    } else {\r\n      setUser(null)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, error, register, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContext\r\n"]},"metadata":{},"sourceType":"module"}