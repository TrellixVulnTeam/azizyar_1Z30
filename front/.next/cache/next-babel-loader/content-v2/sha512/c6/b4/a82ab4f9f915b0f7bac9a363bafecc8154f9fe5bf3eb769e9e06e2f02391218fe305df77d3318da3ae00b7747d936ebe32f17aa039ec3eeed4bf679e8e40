{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/events/add.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { parseCookies } from '@/helpers/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Layout from '@/components/Layout';\nimport { API_URL } from '@/config/index';\nimport styles from '@/styles/Form.module.css';\nexport default function AddEventPage({\n  token\n}) {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    performers: '',\n    venue: '',\n    address: '',\n    date: '',\n    time: '',\n    description: ''\n  });\n  const router = useRouter();\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Validation\n\n    const hasEmptyFields = Object.values(values).some(element => element === '');\n\n    if (hasEmptyFields) {\n      toast.error('Please fill in all fields');\n    }\n\n    const res = await fetch(`${API_URL}/events`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(values)\n    });\n\n    if (!res.ok) {\n      if (res.status === 403 || res.status === 401) {\n        toast.error('No token included');\n        return;\n      }\n\n      toast.error('Something Went Wrong');\n    } else {\n      const evt = await res.json();\n      router.push(`/events/${evt.slug}`);\n    }\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Add New Event\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/events\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Event Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"performers\",\n            children: \"Performers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"performers\",\n            id: \"performers\",\n            value: values.performers,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"venue\",\n            children: \"Venue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"venue\",\n            id: \"venue\",\n            value: values.venue,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            id: \"address\",\n            value: values.address,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            id: \"date\",\n            value: values.date,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"time\",\n            id: \"time\",\n            value: values.time,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Event Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          id: \"description\",\n          value: values.description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Event\",\n        className: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps({\n  req\n}) {\n  const {\n    token\n  } = parseCookies(req);\n  return {\n    props: {\n      token\n    }\n  };\n}","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/events/add.js"],"names":["parseCookies","ToastContainer","toast","useState","useRouter","Link","Layout","API_URL","styles","AddEventPage","token","values","setValues","name","performers","venue","address","date","time","description","router","handleSubmit","e","preventDefault","hasEmptyFields","Object","some","element","error","res","fetch","method","headers","Authorization","body","JSON","stringify","ok","status","evt","json","push","slug","handleInputChange","value","target","form","grid","getServerSideProps","req","props"],"mappings":"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","sourcesContent":["import { parseCookies } from '@/helpers/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport Layout from '@/components/Layout'\nimport { API_URL } from '@/config/index'\nimport styles from '@/styles/Form.module.css'\n\nexport default function AddEventPage({ token }) {\n  const [values, setValues] = useState({\n    name: '',\n    performers: '',\n    venue: '',\n    address: '',\n    date: '',\n    time: '',\n    description: '',\n  })\n\n  const router = useRouter()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    // Validation\n    const hasEmptyFields = Object.values(values).some(\n      (element) => element === ''\n    )\n\n    if (hasEmptyFields) {\n      toast.error('Please fill in all fields')\n    }\n\n    const res = await fetch(`${API_URL}/events`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(values),\n    })\n\n    if (!res.ok) {\n      if (res.status === 403 || res.status === 401) {\n        toast.error('No token included')\n        return\n      }\n      toast.error('Something Went Wrong')\n    } else {\n      const evt = await res.json()\n      router.push(`/events/${evt.slug}`)\n    }\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n\n  return (\n    <Layout title='Add New Event'>\n      <Link href='/events'>Go Back</Link>\n      <h1>Add Event</h1>\n      <ToastContainer />\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.grid}>\n          <div>\n            <label htmlFor='name'>Event Name</label>\n            <input\n              type='text'\n              id='name'\n              name='name'\n              value={values.name}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='performers'>Performers</label>\n            <input\n              type='text'\n              name='performers'\n              id='performers'\n              value={values.performers}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='venue'>Venue</label>\n            <input\n              type='text'\n              name='venue'\n              id='venue'\n              value={values.venue}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='address'>Address</label>\n            <input\n              type='text'\n              name='address'\n              id='address'\n              value={values.address}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='date'>Date</label>\n            <input\n              type='date'\n              name='date'\n              id='date'\n              value={values.date}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor='time'>Time</label>\n            <input\n              type='text'\n              name='time'\n              id='time'\n              value={values.time}\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n\n        <div>\n          <label htmlFor='description'>Event Description</label>\n          <textarea\n            type='text'\n            name='description'\n            id='description'\n            value={values.description}\n            onChange={handleInputChange}\n          ></textarea>\n        </div>\n\n        <input type='submit' value='Add Event' className='btn' />\n      </form>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps({ req }) {\n  const { token } = parseCookies(req)\n\n  return {\n    props: {\n      token,\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}