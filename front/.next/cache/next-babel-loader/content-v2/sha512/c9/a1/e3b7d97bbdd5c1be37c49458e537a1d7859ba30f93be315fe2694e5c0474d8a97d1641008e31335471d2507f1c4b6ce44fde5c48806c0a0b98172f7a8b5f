{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/New_app/front/pages/events/index.js\";\nimport Layout from '@/components/Layout';\nimport EventItem from '@/components/EventItem';\nimport Pagination from '@/components/Pagination';\nimport { API_URL, PER_PAGE } from '@/config/index';\nexport default function EventsPage({\n  events,\n  page,\n  total\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), events.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No events to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 31\n    }, this), events.map(evt => /*#__PURE__*/_jsxDEV(EventItem, {\n      evt: evt\n    }, evt.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps({\n  query: {\n    page = 1\n  }\n}) {\n  // Calculate start page\n  const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE; // Fetch total/count\n\n  const totalRes = await fetch(`${API_URL}/events/count`);\n  const total = await totalRes.json(); // Fetch events\n\n  const eventRes = await fetch(`${API_URL}/events?_sort=date:ASC&_limit=${PER_PAGE}&_start=${start}`);\n  const events = await eventRes.json();\n  return {\n    props: {\n      events,\n      page: +page,\n      total\n    }\n  };\n}","map":{"version":3,"sources":["/Users/ahmaddev/Apps/New_app/front/pages/events/index.js"],"names":["Layout","EventItem","Pagination","API_URL","PER_PAGE","EventsPage","events","page","total","length","map","evt","id","getServerSideProps","query","start","totalRes","fetch","json","eventRes","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,gBAAlC;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAApB,EAA6C;AAC1D,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,MAAM,CAACG,MAAP,KAAkB,CAAlB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF1B,EAIGH,MAAM,CAACI,GAAP,CAAYC,GAAD,iBACV,QAAC,SAAD;AAAwB,MAAA,GAAG,EAAEA;AAA7B,OAAgBA,GAAG,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH,eAQE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,IAAlB;AAAwB,MAAA,KAAK,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;AAED,OAAO,eAAeK,kBAAf,CAAkC;AAAEC,EAAAA,KAAK,EAAE;AAAEP,IAAAA,IAAI,GAAG;AAAT;AAAT,CAAlC,EAA2D;AAChE;AACA,QAAMQ,KAAK,GAAG,CAACR,IAAD,KAAU,CAAV,GAAc,CAAd,GAAkB,CAAC,CAACA,IAAD,GAAQ,CAAT,IAAcH,QAA9C,CAFgE,CAIhE;;AACA,QAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,OAAQ,eAAZ,CAA5B;AACA,QAAMK,KAAK,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAApB,CANgE,CAQhE;;AACA,QAAMC,QAAQ,GAAG,MAAMF,KAAK,CACzB,GAAEd,OAAQ,iCAAgCC,QAAS,WAAUW,KAAM,EAD1C,CAA5B;AAGA,QAAMT,MAAM,GAAG,MAAMa,QAAQ,CAACD,IAAT,EAArB;AAEA,SAAO;AACLE,IAAAA,KAAK,EAAE;AAAEd,MAAAA,MAAF;AAAUC,MAAAA,IAAI,EAAE,CAACA,IAAjB;AAAuBC,MAAAA;AAAvB;AADF,GAAP;AAGD","sourcesContent":["import Layout from '@/components/Layout'\nimport EventItem from '@/components/EventItem'\nimport Pagination from '@/components/Pagination'\nimport { API_URL, PER_PAGE } from '@/config/index'\n\nexport default function EventsPage({ events, page, total }) {\n  return (\n    <Layout>\n      <h1>Events</h1>\n      {events.length === 0 && <h3>No events to show</h3>}\n\n      {events.map((evt) => (\n        <EventItem key={evt.id} evt={evt} />\n      ))}\n\n      <Pagination page={page} total={total} />\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps({ query: { page = 1 } }) {\n  // Calculate start page\n  const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE\n\n  // Fetch total/count\n  const totalRes = await fetch(`${API_URL}/events/count`)\n  const total = await totalRes.json()\n\n  // Fetch events\n  const eventRes = await fetch(\n    `${API_URL}/events?_sort=date:ASC&_limit=${PER_PAGE}&_start=${start}`\n  )\n  const events = await eventRes.json()\n\n  return {\n    props: { events, page: +page, total },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}