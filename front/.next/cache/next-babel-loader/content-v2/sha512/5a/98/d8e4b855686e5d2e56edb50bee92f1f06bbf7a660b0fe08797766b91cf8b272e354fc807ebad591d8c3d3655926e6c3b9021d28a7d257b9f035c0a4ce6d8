{"ast":null,"code":"export default (async (req, res) => {\n  if (req.method === 'POST') {\n    const ean = req.body.ean;\n    fetch( // `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\n    `https://api.bol.com/catalog/v4/search/?q=8720279128701&offset=0&limit=1&dataoutput=products&apikey=8DF32B26097242598188DB66927A8393&format=json`).then(response => response.json()).then(json => res.status(200).json(json.products[0].images[4])); //.then((json) => res.status(200).json('{\"ean\": \"working\"}'));\n  } else {\n    res.setHeader('Allow', ['POST']);\n    res.status(405).json({\n      message: `Method ${req.method} not allowed`\n    });\n  }\n});","map":{"version":3,"sources":["E:/azizyar/front/pages/api/images.js"],"names":["req","res","method","ean","body","fetch","then","response","json","status","products","images","setHeader","message"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,GAAG,GAAGH,GAAG,CAACI,IAAJ,CAASD,GAArB;AAEAE,IAAAA,KAAK,EACH;AACC,qJAFE,CAAL,CAIGC,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKSE,IAAD,IAAUP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqBA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBC,MAAjB,CAAwB,CAAxB,CAArB,CALlB,EAHyB,CASzB;AACD,GAVD,MAUO;AACLV,IAAAA,GAAG,CAACW,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAX,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEK,MAAAA,OAAO,EAAG,UAASb,GAAG,CAACE,MAAO;AAAhC,KAArB;AACD;AACF,CAfD","sourcesContent":["export default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    const ean = req.body.ean;\r\n\r\n    fetch(\r\n      // `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\r\n      `https://api.bol.com/catalog/v4/search/?q=8720279128701&offset=0&limit=1&dataoutput=products&apikey=8DF32B26097242598188DB66927A8393&format=json`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => res.status(200).json(json.products[0].images[4]));\r\n    //.then((json) => res.status(200).json('{\"ean\": \"working\"}'));\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).json({ message: `Method ${req.method} not allowed` });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}