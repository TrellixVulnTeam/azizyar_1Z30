{"ast":null,"code":"import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\nexport default (async (req, res) => {\n  if (req.method === 'POST') {\n    const res = await fetch(`${API_URL}/time-token`);\n    const time = await res.json();\n    const now = new Date().getTime();\n    const oldtime = +time.time;\n    const deference = now - oldtime; //console.log(deference)\n\n    if (deference >= 290000) {\n      //console.log(deference + ' working!')\n      const qlsRes = await fetch(`${TOKEN_URL}`, {\n        method: 'post',\n        headers: {\n          Authorization: 'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await qlsRes.json();\n      const values = {\n        token: data.access_token,\n        time: +now\n      };\n      res.status(200).json(values); //   const ean = req.body.ean\n      //   fetch(\n      //     `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\n      //   )\n      //     .then((response) => response.json())\n      //     .then((json) => res.status(200).json(json.products[0].images[4].url))\n    }\n  } else {\n    res.setHeader('Allow', ['POST']);\n    res.status(405).json({\n      message: `Method ${req.method} not allowed`\n    });\n  }\n});","map":{"version":3,"sources":["E:/azizyar/front/pages/api/token.js"],"names":["API_URL","TOKEN_URL","CREDENTIALS","req","res","method","fetch","time","json","now","Date","getTime","oldtime","deference","qlsRes","headers","Authorization","Buffer","from","toString","data","values","token","access_token","status","setHeader","message"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,QAAgD,gBAAhD;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMD,GAAG,GAAG,MAAME,KAAK,CAAE,GAAEN,OAAQ,aAAZ,CAAvB;AACA,UAAMO,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,UAAMC,OAAO,GAAG,CAACL,IAAI,CAACA,IAAtB;AACA,UAAMM,SAAS,GAAGJ,GAAG,GAAGG,OAAxB,CANyB,CAOzB;;AAEA,QAAIC,SAAS,IAAI,MAAjB,EAAyB;AACvB;AAEA,YAAMC,MAAM,GAAG,MAAMR,KAAK,CAAE,GAAEL,SAAU,EAAd,EAAiB;AACzCI,QAAAA,MAAM,EAAE,MADiC;AAEzCU,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX,WAAWC,MAAM,CAACC,IAAP,CAAa,GAAEhB,WAAY,EAA3B,EAA8BiB,QAA9B,CAAuC,QAAvC,CAFN;AAGP,0BAAgB;AAHT;AAFgC,OAAjB,CAA1B;AAQA,YAAMC,IAAI,GAAG,MAAMN,MAAM,CAACN,IAAP,EAAnB;AAEA,YAAMa,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEF,IAAI,CAACG,YADC;AAEbhB,QAAAA,IAAI,EAAE,CAACE;AAFM,OAAf;AAKAL,MAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqBa,MAArB,EAlBuB,CAoBvB;AAEA;AACA;AACA;AACA;AACA;AACD;AACF,GArCD,MAqCO;AACLjB,IAAAA,GAAG,CAACqB,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACArB,IAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AAAEkB,MAAAA,OAAO,EAAG,UAASvB,GAAG,CAACE,MAAO;AAAhC,KAArB;AACD;AACF,CA1CD","sourcesContent":["import { API_URL, TOKEN_URL, CREDENTIALS } from '@/config/index';\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    const res = await fetch(`${API_URL}/time-token`);\r\n    const time = await res.json();\r\n\r\n    const now = new Date().getTime();\r\n    const oldtime = +time.time;\r\n    const deference = now - oldtime;\r\n    //console.log(deference)\r\n\r\n    if (deference >= 290000) {\r\n      //console.log(deference + ' working!')\r\n\r\n      const qlsRes = await fetch(`${TOKEN_URL}`, {\r\n        method: 'post',\r\n        headers: {\r\n          Authorization:\r\n            'Basic ' + Buffer.from(`${CREDENTIALS}`).toString('base64'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await qlsRes.json();\r\n\r\n      const values = {\r\n        token: data.access_token,\r\n        time: +now,\r\n      };\r\n\r\n      res.status(200).json(values);\r\n\r\n      //   const ean = req.body.ean\r\n\r\n      //   fetch(\r\n      //     `https://api.bol.com/catalog/v4/search/?q=${ean}&offset=0&limit=1&dataoutput=products&apikey=92D2DDD17E2245BDAFC0E359939510CA&format=json`\r\n      //   )\r\n      //     .then((response) => response.json())\r\n      //     .then((json) => res.status(200).json(json.products[0].images[4].url))\r\n    }\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).json({ message: `Method ${req.method} not allowed` });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}