{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ahmaddev/Apps/azizyar/front/pages/index.js\";\nimport Layout from '@/components/Layout';\nimport { NEW_TOKEN_URL, API_URL } from '@/config/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Address from '@/components/Address';\nexport default function HomePage({\n  cont\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), cont.map(con => /*#__PURE__*/_jsxDEV(Address, {\n      address: con\n    }, con.orderId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps() {\n  const res4 = await fetch(`${NEW_TOKEN_URL}`, {\n    method: 'post'\n  });\n  const newToken = await res4.json();\n  const cont = [];\n  const bolRes = await fetch(`https://api.bol.com/retailer/orders`, {\n    method: 'get',\n    headers: {\n      Accept: 'application/vnd.retailer.v7+json',\n      Authorization: 'Bearer ' + newToken.token\n    }\n  });\n  const data = await bolRes.json();\n  const mmm = data.orders;\n\n  for (let k in mmm) {\n    // console.log(k)\n    const bolDetail = await fetch(`https://api.bol.com/retailer/orders/${mmm[k].orderId}`, {\n      method: 'get',\n      headers: {\n        Accept: 'application/vnd.retailer.v7+json',\n        Authorization: 'Bearer ' + newToken.token\n      }\n    });\n    const dat = await bolDetail.json();\n    dat.orderItems.forEach(async (item, index) => {\n      const imgRes = await fetch(`${API_URL}/images?ean=${item.product.ean}`);\n      const imgs = await imgRes.json();\n      const imgUrl = imgs[0] ? imgs[0].url : '/images/event-default.png'; // console.log(imgUrl);\n\n      const img = imgUrl;\n      dat.orderItems[index].product['image'] = img;\n    });\n    cont.push(dat);\n  }\n\n  if (bolRes.ok) {\n    return {\n      props: {\n        cont\n      }\n    };\n  }\n}","map":{"version":3,"sources":["/Users/ahmaddev/Apps/azizyar/front/pages/index.js"],"names":["Layout","NEW_TOKEN_URL","API_URL","ToastContainer","toast","Address","HomePage","cont","map","con","orderId","getServerSideProps","res4","fetch","method","newToken","json","bolRes","headers","Accept","Authorization","token","data","mmm","orders","k","bolDetail","dat","orderItems","forEach","item","index","imgRes","product","ean","imgs","imgUrl","url","img","push","ok","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,gBAAvC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACzC,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGA,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACR,QAAC,OAAD;AAA2B,MAAA,OAAO,EAAEA;AAApC,OAAcA,GAAG,CAACC,OAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAED,OAAO,eAAeC,kBAAf,GAAoC;AACzC,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEZ,aAAc,EAAlB,EAAqB;AAAEa,IAAAA,MAAM,EAAE;AAAV,GAArB,CAAxB;AACA,QAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,IAAL,EAAvB;AAEA,QAAMT,IAAI,GAAG,EAAb;AAEA,QAAMU,MAAM,GAAG,MAAMJ,KAAK,CAAE,qCAAF,EAAwC;AAChEC,IAAAA,MAAM,EAAE,KADwD;AAGhEI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kCADD;AAEPC,MAAAA,aAAa,EAAE,YAAYL,QAAQ,CAACM;AAF7B;AAHuD,GAAxC,CAA1B;AASA,QAAMC,IAAI,GAAG,MAAML,MAAM,CAACD,IAAP,EAAnB;AAEA,QAAMO,GAAG,GAAGD,IAAI,CAACE,MAAjB;;AAEA,OAAK,IAAIC,CAAT,IAAcF,GAAd,EAAmB;AACjB;AAEA,UAAMG,SAAS,GAAG,MAAMb,KAAK,CAC1B,uCAAsCU,GAAG,CAACE,CAAD,CAAH,CAAOf,OAAQ,EAD3B,EAE3B;AACEI,MAAAA,MAAM,EAAE,KADV;AAGEI,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kCADD;AAEPC,QAAAA,aAAa,EAAE,YAAYL,QAAQ,CAACM;AAF7B;AAHX,KAF2B,CAA7B;AAYA,UAAMM,GAAG,GAAG,MAAMD,SAAS,CAACV,IAAV,EAAlB;AAEAW,IAAAA,GAAG,CAACC,UAAJ,CAAeC,OAAf,CAAuB,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AAC5C,YAAMC,MAAM,GAAG,MAAMnB,KAAK,CAAE,GAAEX,OAAQ,eAAc4B,IAAI,CAACG,OAAL,CAAaC,GAAI,EAA3C,CAA1B;AACA,YAAMC,IAAI,GAAG,MAAMH,MAAM,CAAChB,IAAP,EAAnB;AAEA,YAAMoB,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQE,GAAlB,GAAwB,2BAAvC,CAJ4C,CAM5C;;AAEA,YAAMC,GAAG,GAAGF,MAAZ;AACAT,MAAAA,GAAG,CAACC,UAAJ,CAAeG,KAAf,EAAsBE,OAAtB,CAA8B,OAA9B,IAAyCK,GAAzC;AACD,KAVD;AAYA/B,IAAAA,IAAI,CAACgC,IAAL,CAAUZ,GAAV;AACD;;AAED,MAAIV,MAAM,CAACuB,EAAX,EAAe;AACb,WAAO;AACLC,MAAAA,KAAK,EAAE;AAAElC,QAAAA;AAAF;AADF,KAAP;AAGD;AACF","sourcesContent":["import Layout from '@/components/Layout'\nimport { NEW_TOKEN_URL, API_URL } from '@/config/index'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Address from '@/components/Address'\n\nexport default function HomePage({ cont }) {\n  return (\n    <Layout>\n      <h1>Orders: </h1>\n      <ToastContainer />\n\n      {cont.map((con) => (\n        <Address key={con.orderId} address={con} />\n      ))}\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const res4 = await fetch(`${NEW_TOKEN_URL}`, { method: 'post' })\n  const newToken = await res4.json()\n\n  const cont = []\n\n  const bolRes = await fetch(`https://api.bol.com/retailer/orders`, {\n    method: 'get',\n\n    headers: {\n      Accept: 'application/vnd.retailer.v7+json',\n      Authorization: 'Bearer ' + newToken.token,\n    },\n  })\n\n  const data = await bolRes.json()\n\n  const mmm = data.orders\n\n  for (let k in mmm) {\n    // console.log(k)\n\n    const bolDetail = await fetch(\n      `https://api.bol.com/retailer/orders/${mmm[k].orderId}`,\n      {\n        method: 'get',\n\n        headers: {\n          Accept: 'application/vnd.retailer.v7+json',\n          Authorization: 'Bearer ' + newToken.token,\n        },\n      }\n    )\n\n    const dat = await bolDetail.json()\n\n    dat.orderItems.forEach(async (item, index) => {\n      const imgRes = await fetch(`${API_URL}/images?ean=${item.product.ean}`)\n      const imgs = await imgRes.json()\n\n      const imgUrl = imgs[0] ? imgs[0].url : '/images/event-default.png'\n\n      // console.log(imgUrl);\n\n      const img = imgUrl\n      dat.orderItems[index].product['image'] = img\n    })\n\n    cont.push(dat)\n  }\n\n  if (bolRes.ok) {\n    return {\n      props: { cont },\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}